#!/usr/bin/env bash

set -eu

latest_tag=$(git tag -l 'v[0-9]*' | sort -V | tail -n 1)
next_tag=$(echo "$latest_tag" | awk -F. -v OFS=. '{ $3 = $3 + 1; print }')

usage() {
    echo "Usage: $0 [VERSION]"
    echo
    echo "Latest version is ${latest_tag#v}."
    echo "If VERSION is not provided, the next patch version ${next_tag#v} will be used."
}

if [ "$#" -gt 1 ]; then
    usage
    exit 1
fi

if [ "$#" -eq 1 ]; then
    if [ "$1" = "--help" ] || [ "$1" = "-h" ]; then
        usage
        exit 0
    fi

    VERSION="$1"
    if ! [[ $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
        echo "Not a valid version: \"$VERSION\""
        exit 1
    fi
else
    VERSION="${next_tag#v}"
fi

echo Releasing version "${VERSION}"

echo "Checking for uncommitted changes..."
if [[ -n $(git status --porcelain) ]]; then
    echo "There are uncommitted changes."
    exit 1
fi

echo "Checking code..."
scripts/lint
if [ $? -ne 0 ]; then
    echo "Code check failed."
    exit 1
fi

cd custom_components/xtherma_fp/
jq ".version=\"${VERSION}\"" manifest.json > manifest.json.tmp
mv manifest.json.tmp manifest.json
git add manifest.json
cd ../..

git commit -m "Bump version to ${VERSION}"

git tag -a "v${VERSION}" \
    -m "Release version ${VERSION}" \
    -m "$(git log "${latest_tag}..HEAD" --merges --pretty=format:'* %b')"
